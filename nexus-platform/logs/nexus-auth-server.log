2025-08-14 00:31:49.364 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.user_id,
        u1_0.account_non_expired,
        u1_0.account_non_locked,
        u1_0.battlenet_access_token,
        u1_0.battlenet_id,
        u1_0.battlenet_token_expiry,
        u1_0.created_at,
        u1_0.credentials_non_expired,
        u1_0.discord_access_token,
        u1_0.discord_id,
        u1_0.discord_refresh_token,
        u1_0.discord_token_expiry,
        u1_0.email,
        u1_0.enabled,
        u1_0.password,
        u1_0.state_phase,
        u1_0.tokens_revoked_at,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.discord_refresh_token is not null
2025-08-14 00:36:49.416 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.user_id,
        u1_0.account_non_expired,
        u1_0.account_non_locked,
        u1_0.battlenet_access_token,
        u1_0.battlenet_id,
        u1_0.battlenet_token_expiry,
        u1_0.created_at,
        u1_0.credentials_non_expired,
        u1_0.discord_access_token,
        u1_0.discord_id,
        u1_0.discord_refresh_token,
        u1_0.discord_token_expiry,
        u1_0.email,
        u1_0.enabled,
        u1_0.password,
        u1_0.state_phase,
        u1_0.tokens_revoked_at,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.discord_refresh_token is not null
2025-08-14 00:41:49.421 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.user_id,
        u1_0.account_non_expired,
        u1_0.account_non_locked,
        u1_0.battlenet_access_token,
        u1_0.battlenet_id,
        u1_0.battlenet_token_expiry,
        u1_0.created_at,
        u1_0.credentials_non_expired,
        u1_0.discord_access_token,
        u1_0.discord_id,
        u1_0.discord_refresh_token,
        u1_0.discord_token_expiry,
        u1_0.email,
        u1_0.enabled,
        u1_0.password,
        u1_0.state_phase,
        u1_0.tokens_revoked_at,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.discord_refresh_token is not null
2025-08-14 00:46:49.425 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.user_id,
        u1_0.account_non_expired,
        u1_0.account_non_locked,
        u1_0.battlenet_access_token,
        u1_0.battlenet_id,
        u1_0.battlenet_token_expiry,
        u1_0.created_at,
        u1_0.credentials_non_expired,
        u1_0.discord_access_token,
        u1_0.discord_id,
        u1_0.discord_refresh_token,
        u1_0.discord_token_expiry,
        u1_0.email,
        u1_0.enabled,
        u1_0.password,
        u1_0.state_phase,
        u1_0.tokens_revoked_at,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.discord_refresh_token is not null
2025-08-14 00:51:49.429 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.user_id,
        u1_0.account_non_expired,
        u1_0.account_non_locked,
        u1_0.battlenet_access_token,
        u1_0.battlenet_id,
        u1_0.battlenet_token_expiry,
        u1_0.created_at,
        u1_0.credentials_non_expired,
        u1_0.discord_access_token,
        u1_0.discord_id,
        u1_0.discord_refresh_token,
        u1_0.discord_token_expiry,
        u1_0.email,
        u1_0.enabled,
        u1_0.password,
        u1_0.state_phase,
        u1_0.tokens_revoked_at,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.discord_refresh_token is not null
2025-08-14 00:56:49.433 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.user_id,
        u1_0.account_non_expired,
        u1_0.account_non_locked,
        u1_0.battlenet_access_token,
        u1_0.battlenet_id,
        u1_0.battlenet_token_expiry,
        u1_0.created_at,
        u1_0.credentials_non_expired,
        u1_0.discord_access_token,
        u1_0.discord_id,
        u1_0.discord_refresh_token,
        u1_0.discord_token_expiry,
        u1_0.email,
        u1_0.enabled,
        u1_0.password,
        u1_0.state_phase,
        u1_0.tokens_revoked_at,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.discord_refresh_token is not null
2025-08-14 01:01:49.442 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.user_id,
        u1_0.account_non_expired,
        u1_0.account_non_locked,
        u1_0.battlenet_access_token,
        u1_0.battlenet_id,
        u1_0.battlenet_token_expiry,
        u1_0.created_at,
        u1_0.credentials_non_expired,
        u1_0.discord_access_token,
        u1_0.discord_id,
        u1_0.discord_refresh_token,
        u1_0.discord_token_expiry,
        u1_0.email,
        u1_0.enabled,
        u1_0.password,
        u1_0.state_phase,
        u1_0.tokens_revoked_at,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.discord_refresh_token is not null
2025-08-14 01:06:49.446 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.user_id,
        u1_0.account_non_expired,
        u1_0.account_non_locked,
        u1_0.battlenet_access_token,
        u1_0.battlenet_id,
        u1_0.battlenet_token_expiry,
        u1_0.created_at,
        u1_0.credentials_non_expired,
        u1_0.discord_access_token,
        u1_0.discord_id,
        u1_0.discord_refresh_token,
        u1_0.discord_token_expiry,
        u1_0.email,
        u1_0.enabled,
        u1_0.password,
        u1_0.state_phase,
        u1_0.tokens_revoked_at,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.discord_refresh_token is not null
2025-08-14 01:11:49.455 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.user_id,
        u1_0.account_non_expired,
        u1_0.account_non_locked,
        u1_0.battlenet_access_token,
        u1_0.battlenet_id,
        u1_0.battlenet_token_expiry,
        u1_0.created_at,
        u1_0.credentials_non_expired,
        u1_0.discord_access_token,
        u1_0.discord_id,
        u1_0.discord_refresh_token,
        u1_0.discord_token_expiry,
        u1_0.email,
        u1_0.enabled,
        u1_0.password,
        u1_0.state_phase,
        u1_0.tokens_revoked_at,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.discord_refresh_token is not null
2025-08-14 01:16:49.463 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.user_id,
        u1_0.account_non_expired,
        u1_0.account_non_locked,
        u1_0.battlenet_access_token,
        u1_0.battlenet_id,
        u1_0.battlenet_token_expiry,
        u1_0.created_at,
        u1_0.credentials_non_expired,
        u1_0.discord_access_token,
        u1_0.discord_id,
        u1_0.discord_refresh_token,
        u1_0.discord_token_expiry,
        u1_0.email,
        u1_0.enabled,
        u1_0.password,
        u1_0.state_phase,
        u1_0.tokens_revoked_at,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.discord_refresh_token is not null
2025-08-14 01:21:47.619 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* DELETE 
    FROM
        RefreshToken rt 
    WHERE
        rt.expiryDate < :now */ delete 
    from
        refresh_tokens rt1_0 
    where
        rt1_0.expiry_date<?
2025-08-14 01:21:47.621 [scheduling-1] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:TIMESTAMP_UTC) <- [2025-08-13T23:21:47.613741284Z]
2025-08-14 01:21:49.470 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.user_id,
        u1_0.account_non_expired,
        u1_0.account_non_locked,
        u1_0.battlenet_access_token,
        u1_0.battlenet_id,
        u1_0.battlenet_token_expiry,
        u1_0.created_at,
        u1_0.credentials_non_expired,
        u1_0.discord_access_token,
        u1_0.discord_id,
        u1_0.discord_refresh_token,
        u1_0.discord_token_expiry,
        u1_0.email,
        u1_0.enabled,
        u1_0.password,
        u1_0.state_phase,
        u1_0.tokens_revoked_at,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.discord_refresh_token is not null
2025-08-14 01:26:49.478 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.user_id,
        u1_0.account_non_expired,
        u1_0.account_non_locked,
        u1_0.battlenet_access_token,
        u1_0.battlenet_id,
        u1_0.battlenet_token_expiry,
        u1_0.created_at,
        u1_0.credentials_non_expired,
        u1_0.discord_access_token,
        u1_0.discord_id,
        u1_0.discord_refresh_token,
        u1_0.discord_token_expiry,
        u1_0.email,
        u1_0.enabled,
        u1_0.password,
        u1_0.state_phase,
        u1_0.tokens_revoked_at,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.discord_refresh_token is not null
2025-08-14 01:31:49.483 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.user_id,
        u1_0.account_non_expired,
        u1_0.account_non_locked,
        u1_0.battlenet_access_token,
        u1_0.battlenet_id,
        u1_0.battlenet_token_expiry,
        u1_0.created_at,
        u1_0.credentials_non_expired,
        u1_0.discord_access_token,
        u1_0.discord_id,
        u1_0.discord_refresh_token,
        u1_0.discord_token_expiry,
        u1_0.email,
        u1_0.enabled,
        u1_0.password,
        u1_0.state_phase,
        u1_0.tokens_revoked_at,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.discord_refresh_token is not null
2025-08-14 01:36:49.494 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.user_id,
        u1_0.account_non_expired,
        u1_0.account_non_locked,
        u1_0.battlenet_access_token,
        u1_0.battlenet_id,
        u1_0.battlenet_token_expiry,
        u1_0.created_at,
        u1_0.credentials_non_expired,
        u1_0.discord_access_token,
        u1_0.discord_id,
        u1_0.discord_refresh_token,
        u1_0.discord_token_expiry,
        u1_0.email,
        u1_0.enabled,
        u1_0.password,
        u1_0.state_phase,
        u1_0.tokens_revoked_at,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.discord_refresh_token is not null
2025-08-14 01:41:49.502 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.user_id,
        u1_0.account_non_expired,
        u1_0.account_non_locked,
        u1_0.battlenet_access_token,
        u1_0.battlenet_id,
        u1_0.battlenet_token_expiry,
        u1_0.created_at,
        u1_0.credentials_non_expired,
        u1_0.discord_access_token,
        u1_0.discord_id,
        u1_0.discord_refresh_token,
        u1_0.discord_token_expiry,
        u1_0.email,
        u1_0.enabled,
        u1_0.password,
        u1_0.state_phase,
        u1_0.tokens_revoked_at,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.discord_refresh_token is not null
2025-08-14 01:46:49.507 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.user_id,
        u1_0.account_non_expired,
        u1_0.account_non_locked,
        u1_0.battlenet_access_token,
        u1_0.battlenet_id,
        u1_0.battlenet_token_expiry,
        u1_0.created_at,
        u1_0.credentials_non_expired,
        u1_0.discord_access_token,
        u1_0.discord_id,
        u1_0.discord_refresh_token,
        u1_0.discord_token_expiry,
        u1_0.email,
        u1_0.enabled,
        u1_0.password,
        u1_0.state_phase,
        u1_0.tokens_revoked_at,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.discord_refresh_token is not null
2025-08-14 01:51:49.510 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.user_id,
        u1_0.account_non_expired,
        u1_0.account_non_locked,
        u1_0.battlenet_access_token,
        u1_0.battlenet_id,
        u1_0.battlenet_token_expiry,
        u1_0.created_at,
        u1_0.credentials_non_expired,
        u1_0.discord_access_token,
        u1_0.discord_id,
        u1_0.discord_refresh_token,
        u1_0.discord_token_expiry,
        u1_0.email,
        u1_0.enabled,
        u1_0.password,
        u1_0.state_phase,
        u1_0.tokens_revoked_at,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.discord_refresh_token is not null
2025-08-14 01:56:49.524 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.user_id,
        u1_0.account_non_expired,
        u1_0.account_non_locked,
        u1_0.battlenet_access_token,
        u1_0.battlenet_id,
        u1_0.battlenet_token_expiry,
        u1_0.created_at,
        u1_0.credentials_non_expired,
        u1_0.discord_access_token,
        u1_0.discord_id,
        u1_0.discord_refresh_token,
        u1_0.discord_token_expiry,
        u1_0.email,
        u1_0.enabled,
        u1_0.password,
        u1_0.state_phase,
        u1_0.tokens_revoked_at,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.discord_refresh_token is not null
2025-08-14 02:01:49.530 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.user_id,
        u1_0.account_non_expired,
        u1_0.account_non_locked,
        u1_0.battlenet_access_token,
        u1_0.battlenet_id,
        u1_0.battlenet_token_expiry,
        u1_0.created_at,
        u1_0.credentials_non_expired,
        u1_0.discord_access_token,
        u1_0.discord_id,
        u1_0.discord_refresh_token,
        u1_0.discord_token_expiry,
        u1_0.email,
        u1_0.enabled,
        u1_0.password,
        u1_0.state_phase,
        u1_0.tokens_revoked_at,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.discord_refresh_token is not null
2025-08-14 02:04:06.864 [http-nio-9000-exec-6] INFO  f.k.n.auth.controller.AuthController - Tentative d'inscription pour l'email: test@example.com
2025-08-14 02:04:06.866 [http-nio-9000-exec-6] INFO  f.k.n.a.s.AuthenticationService - Tentative d'inscription pour l'email: test@example.com
2025-08-14 02:04:06.879 [http-nio-9000-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.user_id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
2025-08-14 02:04:06.879 [http-nio-9000-exec-6] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:VARCHAR) <- [test@example.com]
2025-08-14 02:04:06.880 [http-nio-9000-exec-6] TRACE org.hibernate.orm.jdbc.bind - binding parameter (2:INTEGER) <- [1]
2025-08-14 02:04:07.231 [http-nio-9000-exec-6] DEBUG org.hibernate.SQL - 
    /* insert for
        fr.kryptonn.nexus.auth.entity.User */insert 
    into
        users (account_non_expired, account_non_locked, battlenet_access_token, battlenet_id, battlenet_token_expiry, created_at, credentials_non_expired, discord_access_token, discord_id, discord_refresh_token, discord_token_expiry, email, enabled, password, state_phase, tokens_revoked_at, updated_at) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-08-14 02:04:07.237 [http-nio-9000-exec-6] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:BOOLEAN) <- [true]
2025-08-14 02:04:07.237 [http-nio-9000-exec-6] TRACE org.hibernate.orm.jdbc.bind - binding parameter (2:BOOLEAN) <- [true]
2025-08-14 02:04:07.237 [http-nio-9000-exec-6] TRACE org.hibernate.orm.jdbc.bind - binding parameter (3:VARCHAR) <- [null]
2025-08-14 02:04:07.237 [http-nio-9000-exec-6] TRACE org.hibernate.orm.jdbc.bind - binding parameter (4:VARCHAR) <- [null]
2025-08-14 02:04:07.238 [http-nio-9000-exec-6] TRACE org.hibernate.orm.jdbc.bind - binding parameter (5:TIMESTAMP) <- [null]
2025-08-14 02:04:07.238 [http-nio-9000-exec-6] TRACE org.hibernate.orm.jdbc.bind - binding parameter (6:TIMESTAMP) <- [2025-08-14T02:04:07.211087]
2025-08-14 02:04:07.239 [http-nio-9000-exec-6] TRACE org.hibernate.orm.jdbc.bind - binding parameter (7:BOOLEAN) <- [true]
2025-08-14 02:04:07.239 [http-nio-9000-exec-6] TRACE org.hibernate.orm.jdbc.bind - binding parameter (8:VARCHAR) <- [null]
2025-08-14 02:04:07.239 [http-nio-9000-exec-6] TRACE org.hibernate.orm.jdbc.bind - binding parameter (9:VARCHAR) <- [null]
2025-08-14 02:04:07.239 [http-nio-9000-exec-6] TRACE org.hibernate.orm.jdbc.bind - binding parameter (10:VARCHAR) <- [null]
2025-08-14 02:04:07.239 [http-nio-9000-exec-6] TRACE org.hibernate.orm.jdbc.bind - binding parameter (11:TIMESTAMP) <- [null]
2025-08-14 02:04:07.239 [http-nio-9000-exec-6] TRACE org.hibernate.orm.jdbc.bind - binding parameter (12:VARCHAR) <- [test@example.com]
2025-08-14 02:04:07.239 [http-nio-9000-exec-6] TRACE org.hibernate.orm.jdbc.bind - binding parameter (13:BOOLEAN) <- [true]
2025-08-14 02:04:07.240 [http-nio-9000-exec-6] TRACE org.hibernate.orm.jdbc.bind - binding parameter (14:VARCHAR) <- [$2a$12$ke4uAovca7R9px38Xup1NeJmmQTxXFuk.uIVG4QmTXpOk2C9of.oG]
2025-08-14 02:04:07.240 [http-nio-9000-exec-6] TRACE org.hibernate.orm.jdbc.bind - binding parameter (15:TINYINT) <- [INITIAL]
2025-08-14 02:04:07.240 [http-nio-9000-exec-6] TRACE org.hibernate.orm.jdbc.bind - binding parameter (16:TIMESTAMP) <- [null]
2025-08-14 02:04:07.240 [http-nio-9000-exec-6] TRACE org.hibernate.orm.jdbc.bind - binding parameter (17:TIMESTAMP) <- [2025-08-14T02:04:07.211128]
2025-08-14 02:04:07.300 [http-nio-9000-exec-6] INFO  f.k.n.a.s.AuthenticationService - Nouvel utilisateur créé avec l'email: test@example.com
2025-08-14 02:04:07.324 [http-nio-9000-exec-6] DEBUG org.hibernate.SQL - 
    /* insert for
        fr.kryptonn.nexus.auth.entity.Authority */insert 
    into
        authorities (authority, user_id, id) 
    values
        (?, ?, ?)
2025-08-14 02:04:07.324 [http-nio-9000-exec-6] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:VARCHAR) <- [ROLE_USER]
2025-08-14 02:04:07.324 [http-nio-9000-exec-6] TRACE org.hibernate.orm.jdbc.bind - binding parameter (2:BIGINT) <- [1]
2025-08-14 02:04:07.325 [http-nio-9000-exec-6] TRACE org.hibernate.orm.jdbc.bind - binding parameter (3:VARCHAR) <- [715f7cc6-d933-4cba-9076-f7d8c003a1e3]
2025-08-14 02:04:07.342 [http-nio-9000-exec-6] INFO  f.k.n.auth.controller.AuthController - Inscription réussie pour l'utilisateur: test@example.com
2025-08-14 02:04:22.188 [http-nio-9000-exec-8] INFO  f.k.n.auth.controller.AuthController - Tentative de connexion pour l'email: test@example.com
2025-08-14 02:04:22.189 [http-nio-9000-exec-8] INFO  f.k.n.a.s.AuthenticationService - Tentative de connexion pour l'email: test@example.com
2025-08-14 02:04:22.431 [http-nio-9000-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.user_id,
        u1_0.account_non_expired,
        u1_0.account_non_locked,
        a1_0.user_id,
        a1_0.id,
        a1_0.authority,
        u1_0.battlenet_access_token,
        u1_0.battlenet_id,
        u1_0.battlenet_token_expiry,
        u1_0.created_at,
        u1_0.credentials_non_expired,
        u1_0.discord_access_token,
        u1_0.discord_id,
        u1_0.discord_refresh_token,
        u1_0.discord_token_expiry,
        u1_0.email,
        u1_0.enabled,
        u1_0.password,
        u1_0.state_phase,
        u1_0.tokens_revoked_at,
        u1_0.updated_at 
    from
        users u1_0 
    left join
        authorities a1_0 
            on u1_0.user_id=a1_0.user_id 
    where
        u1_0.email=?
2025-08-14 02:04:22.431 [http-nio-9000-exec-8] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:VARCHAR) <- [test@example.com]
2025-08-14 02:04:22.656 [http-nio-9000-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.user_id,
        u1_0.account_non_expired,
        u1_0.account_non_locked,
        a1_0.user_id,
        a1_0.id,
        a1_0.authority,
        u1_0.battlenet_access_token,
        u1_0.battlenet_id,
        u1_0.battlenet_token_expiry,
        u1_0.created_at,
        u1_0.credentials_non_expired,
        u1_0.discord_access_token,
        u1_0.discord_id,
        u1_0.discord_refresh_token,
        u1_0.discord_token_expiry,
        u1_0.email,
        u1_0.enabled,
        u1_0.password,
        u1_0.state_phase,
        u1_0.tokens_revoked_at,
        u1_0.updated_at 
    from
        users u1_0 
    left join
        authorities a1_0 
            on u1_0.user_id=a1_0.user_id 
    where
        u1_0.email=?
2025-08-14 02:04:22.657 [http-nio-9000-exec-8] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:VARCHAR) <- [test@example.com]
2025-08-14 02:04:22.658 [http-nio-9000-exec-8] INFO  f.k.n.a.s.AuthenticationService - Connexion réussie pour l'utilisateur: test@example.com
2025-08-14 02:04:22.659 [http-nio-9000-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.user_id,
        u1_0.account_non_expired,
        u1_0.account_non_locked,
        a1_0.user_id,
        a1_0.id,
        a1_0.authority,
        u1_0.battlenet_access_token,
        u1_0.battlenet_id,
        u1_0.battlenet_token_expiry,
        u1_0.created_at,
        u1_0.credentials_non_expired,
        u1_0.discord_access_token,
        u1_0.discord_id,
        u1_0.discord_refresh_token,
        u1_0.discord_token_expiry,
        u1_0.email,
        u1_0.enabled,
        u1_0.password,
        u1_0.state_phase,
        u1_0.tokens_revoked_at,
        u1_0.updated_at 
    from
        users u1_0 
    left join
        authorities a1_0 
            on u1_0.user_id=a1_0.user_id 
    where
        u1_0.email=?
2025-08-14 02:04:22.660 [http-nio-9000-exec-8] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:VARCHAR) <- [test@example.com]
2025-08-14 02:04:22.961 [http-nio-9000-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.user_id,
        u1_0.account_non_expired,
        u1_0.account_non_locked,
        a1_0.user_id,
        a1_0.id,
        a1_0.authority,
        u1_0.battlenet_access_token,
        u1_0.battlenet_id,
        u1_0.battlenet_token_expiry,
        u1_0.created_at,
        u1_0.credentials_non_expired,
        u1_0.discord_access_token,
        u1_0.discord_id,
        u1_0.discord_refresh_token,
        u1_0.discord_token_expiry,
        u1_0.email,
        u1_0.enabled,
        u1_0.password,
        u1_0.state_phase,
        u1_0.tokens_revoked_at,
        u1_0.updated_at 
    from
        users u1_0 
    left join
        authorities a1_0 
            on u1_0.user_id=a1_0.user_id 
    where
        u1_0.email=?
2025-08-14 02:04:22.961 [http-nio-9000-exec-8] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:VARCHAR) <- [test@example.com]
2025-08-14 02:04:22.971 [http-nio-9000-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        rt1_0.id,
        rt1_0.created_at,
        rt1_0.expiry_date,
        rt1_0.token,
        rt1_0.user_id 
    from
        refresh_tokens rt1_0 
    where
        rt1_0.user_id=?
2025-08-14 02:04:22.971 [http-nio-9000-exec-8] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:BIGINT) <- [1]
2025-08-14 02:04:22.976 [http-nio-9000-exec-8] INFO  f.k.n.a.service.RefreshTokenService - Refresh token généré pour l'utilisateur: test@example.com
2025-08-14 02:04:22.986 [http-nio-9000-exec-8] DEBUG org.hibernate.SQL - 
    /* insert for
        fr.kryptonn.nexus.auth.entity.RefreshToken */insert 
    into
        refresh_tokens (created_at, expiry_date, token, user_id, id) 
    values
        (?, ?, ?, ?, ?)
2025-08-14 02:04:22.986 [http-nio-9000-exec-8] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:TIMESTAMP_UTC) <- [2025-08-14T00:04:22.986176Z]
2025-08-14 02:04:22.986 [http-nio-9000-exec-8] TRACE org.hibernate.orm.jdbc.bind - binding parameter (2:TIMESTAMP_UTC) <- [2025-08-21T00:04:22.975831438Z]
2025-08-14 02:04:22.986 [http-nio-9000-exec-8] TRACE org.hibernate.orm.jdbc.bind - binding parameter (3:VARCHAR) <- [FLwptFdUSixDm2_lhueJhPm7CttjiCaNPKK8LbLIkJM]
2025-08-14 02:04:22.987 [http-nio-9000-exec-8] TRACE org.hibernate.orm.jdbc.bind - binding parameter (4:BIGINT) <- [1]
2025-08-14 02:04:22.987 [http-nio-9000-exec-8] TRACE org.hibernate.orm.jdbc.bind - binding parameter (5:VARCHAR) <- [ae5b2919-8a05-4310-a87e-63e512ca783d]
2025-08-14 02:04:22.995 [http-nio-9000-exec-8] INFO  f.k.n.auth.controller.AuthController - Connexion réussie pour l'utilisateur: test@example.com
2025-08-14 02:04:34.168 [http-nio-9000-exec-10] ERROR f.k.nexus.auth.service.JwtService - Erreur inattendue lors de la validation: JWT signature does not match locally computed signature. JWT validity cannot be asserted and should not be trusted.
2025-08-14 02:05:41.206 [http-nio-9000-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.user_id,
        u1_0.account_non_expired,
        u1_0.account_non_locked,
        a1_0.user_id,
        a1_0.id,
        a1_0.authority,
        u1_0.battlenet_access_token,
        u1_0.battlenet_id,
        u1_0.battlenet_token_expiry,
        u1_0.created_at,
        u1_0.credentials_non_expired,
        u1_0.discord_access_token,
        u1_0.discord_id,
        u1_0.discord_refresh_token,
        u1_0.discord_token_expiry,
        u1_0.email,
        u1_0.enabled,
        u1_0.password,
        u1_0.state_phase,
        u1_0.tokens_revoked_at,
        u1_0.updated_at 
    from
        users u1_0 
    left join
        authorities a1_0 
            on u1_0.user_id=a1_0.user_id 
    where
        u1_0.email=?
2025-08-14 02:05:41.207 [http-nio-9000-exec-2] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:VARCHAR) <- [test@example.com]
2025-08-14 02:05:41.220 [http-nio-9000-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.user_id,
        u1_0.account_non_expired,
        u1_0.account_non_locked,
        a1_0.user_id,
        a1_0.id,
        a1_0.authority,
        u1_0.battlenet_access_token,
        u1_0.battlenet_id,
        u1_0.battlenet_token_expiry,
        u1_0.created_at,
        u1_0.credentials_non_expired,
        u1_0.discord_access_token,
        u1_0.discord_id,
        u1_0.discord_refresh_token,
        u1_0.discord_token_expiry,
        u1_0.email,
        u1_0.enabled,
        u1_0.password,
        u1_0.state_phase,
        u1_0.tokens_revoked_at,
        u1_0.updated_at 
    from
        users u1_0 
    left join
        authorities a1_0 
            on u1_0.user_id=a1_0.user_id 
    where
        u1_0.email=?
2025-08-14 02:05:41.220 [http-nio-9000-exec-2] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:VARCHAR) <- [test@example.com]
2025-08-14 02:06:47.528 [http-nio-9000-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.account_non_expired,
        u1_0.account_non_locked,
        a1_0.user_id,
        a1_0.id,
        a1_0.authority,
        u1_0.battlenet_access_token,
        u1_0.battlenet_id,
        u1_0.battlenet_token_expiry,
        u1_0.created_at,
        u1_0.credentials_non_expired,
        u1_0.discord_access_token,
        u1_0.discord_id,
        u1_0.discord_refresh_token,
        u1_0.discord_token_expiry,
        u1_0.email,
        u1_0.enabled,
        u1_0.password,
        u1_0.state_phase,
        u1_0.tokens_revoked_at,
        u1_0.updated_at 
    from
        users u1_0 
    left join
        authorities a1_0 
            on u1_0.user_id=a1_0.user_id 
    where
        u1_0.user_id=?
2025-08-14 02:06:47.528 [http-nio-9000-exec-4] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:BIGINT) <- [1]
2025-08-14 02:06:47.844 [http-nio-9000-exec-4] ERROR f.k.n.a.c.GlobalExceptionHandler - Erreur interne du serveur: 
org.springframework.web.client.HttpClientErrorException$BadRequest: 400 Bad Request on POST request for "https://discord.com/api/oauth2/token": "{"error": "invalid_grant", "error_description": "Invalid \"redirect_uri\" in request."}"
	at org.springframework.web.client.HttpClientErrorException.create(HttpClientErrorException.java:103)
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:186)
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:147)
	at org.springframework.web.client.RestTemplate.handleResponse(RestTemplate.java:953)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:902)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:801)
	at org.springframework.web.client.RestTemplate.postForObject(RestTemplate.java:518)
	at fr.kryptonn.nexus.auth.service.DiscordOAuthService.exchangeCode(DiscordOAuthService.java:59)
	at fr.kryptonn.nexus.auth.service.UserService.linkDiscordAccount(UserService.java:238)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at fr.kryptonn.nexus.auth.service.UserService$$SpringCGLIB$$0.linkDiscordAccount(<generated>)
	at fr.kryptonn.nexus.auth.controller.OAuthController.discordCallback(OAuthController.java:53)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:125)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at fr.kryptonn.nexus.auth.config.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:49)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.ServletRequestPathFilter.doFilter(ServletRequestPathFilter.java:52)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebSecurityConfiguration.java:319)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$4(HandlerMappingIntrospector.java:267)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:240)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-14 02:06:49.533 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.user_id,
        u1_0.account_non_expired,
        u1_0.account_non_locked,
        u1_0.battlenet_access_token,
        u1_0.battlenet_id,
        u1_0.battlenet_token_expiry,
        u1_0.created_at,
        u1_0.credentials_non_expired,
        u1_0.discord_access_token,
        u1_0.discord_id,
        u1_0.discord_refresh_token,
        u1_0.discord_token_expiry,
        u1_0.email,
        u1_0.enabled,
        u1_0.password,
        u1_0.state_phase,
        u1_0.tokens_revoked_at,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.discord_refresh_token is not null
2025-08-14 02:11:49.541 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.user_id,
        u1_0.account_non_expired,
        u1_0.account_non_locked,
        u1_0.battlenet_access_token,
        u1_0.battlenet_id,
        u1_0.battlenet_token_expiry,
        u1_0.created_at,
        u1_0.credentials_non_expired,
        u1_0.discord_access_token,
        u1_0.discord_id,
        u1_0.discord_refresh_token,
        u1_0.discord_token_expiry,
        u1_0.email,
        u1_0.enabled,
        u1_0.password,
        u1_0.state_phase,
        u1_0.tokens_revoked_at,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.discord_refresh_token is not null
2025-08-14 02:16:49.545 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.user_id,
        u1_0.account_non_expired,
        u1_0.account_non_locked,
        u1_0.battlenet_access_token,
        u1_0.battlenet_id,
        u1_0.battlenet_token_expiry,
        u1_0.created_at,
        u1_0.credentials_non_expired,
        u1_0.discord_access_token,
        u1_0.discord_id,
        u1_0.discord_refresh_token,
        u1_0.discord_token_expiry,
        u1_0.email,
        u1_0.enabled,
        u1_0.password,
        u1_0.state_phase,
        u1_0.tokens_revoked_at,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.discord_refresh_token is not null
2025-08-14 02:21:47.581 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* DELETE 
    FROM
        RefreshToken rt 
    WHERE
        rt.expiryDate < :now */ delete 
    from
        refresh_tokens rt1_0 
    where
        rt1_0.expiry_date<?
2025-08-14 02:21:47.582 [scheduling-1] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:TIMESTAMP_UTC) <- [2025-08-14T00:21:47.580142151Z]
2025-08-14 02:21:49.549 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.user_id,
        u1_0.account_non_expired,
        u1_0.account_non_locked,
        u1_0.battlenet_access_token,
        u1_0.battlenet_id,
        u1_0.battlenet_token_expiry,
        u1_0.created_at,
        u1_0.credentials_non_expired,
        u1_0.discord_access_token,
        u1_0.discord_id,
        u1_0.discord_refresh_token,
        u1_0.discord_token_expiry,
        u1_0.email,
        u1_0.enabled,
        u1_0.password,
        u1_0.state_phase,
        u1_0.tokens_revoked_at,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.discord_refresh_token is not null
2025-08-14 02:26:49.552 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.user_id,
        u1_0.account_non_expired,
        u1_0.account_non_locked,
        u1_0.battlenet_access_token,
        u1_0.battlenet_id,
        u1_0.battlenet_token_expiry,
        u1_0.created_at,
        u1_0.credentials_non_expired,
        u1_0.discord_access_token,
        u1_0.discord_id,
        u1_0.discord_refresh_token,
        u1_0.discord_token_expiry,
        u1_0.email,
        u1_0.enabled,
        u1_0.password,
        u1_0.state_phase,
        u1_0.tokens_revoked_at,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.discord_refresh_token is not null
2025-08-14 02:31:49.555 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.user_id,
        u1_0.account_non_expired,
        u1_0.account_non_locked,
        u1_0.battlenet_access_token,
        u1_0.battlenet_id,
        u1_0.battlenet_token_expiry,
        u1_0.created_at,
        u1_0.credentials_non_expired,
        u1_0.discord_access_token,
        u1_0.discord_id,
        u1_0.discord_refresh_token,
        u1_0.discord_token_expiry,
        u1_0.email,
        u1_0.enabled,
        u1_0.password,
        u1_0.state_phase,
        u1_0.tokens_revoked_at,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.discord_refresh_token is not null
2025-08-14 02:36:49.559 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.user_id,
        u1_0.account_non_expired,
        u1_0.account_non_locked,
        u1_0.battlenet_access_token,
        u1_0.battlenet_id,
        u1_0.battlenet_token_expiry,
        u1_0.created_at,
        u1_0.credentials_non_expired,
        u1_0.discord_access_token,
        u1_0.discord_id,
        u1_0.discord_refresh_token,
        u1_0.discord_token_expiry,
        u1_0.email,
        u1_0.enabled,
        u1_0.password,
        u1_0.state_phase,
        u1_0.tokens_revoked_at,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.discord_refresh_token is not null
2025-08-14 02:41:49.563 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.user_id,
        u1_0.account_non_expired,
        u1_0.account_non_locked,
        u1_0.battlenet_access_token,
        u1_0.battlenet_id,
        u1_0.battlenet_token_expiry,
        u1_0.created_at,
        u1_0.credentials_non_expired,
        u1_0.discord_access_token,
        u1_0.discord_id,
        u1_0.discord_refresh_token,
        u1_0.discord_token_expiry,
        u1_0.email,
        u1_0.enabled,
        u1_0.password,
        u1_0.state_phase,
        u1_0.tokens_revoked_at,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.discord_refresh_token is not null
2025-08-14 02:46:49.566 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.user_id,
        u1_0.account_non_expired,
        u1_0.account_non_locked,
        u1_0.battlenet_access_token,
        u1_0.battlenet_id,
        u1_0.battlenet_token_expiry,
        u1_0.created_at,
        u1_0.credentials_non_expired,
        u1_0.discord_access_token,
        u1_0.discord_id,
        u1_0.discord_refresh_token,
        u1_0.discord_token_expiry,
        u1_0.email,
        u1_0.enabled,
        u1_0.password,
        u1_0.state_phase,
        u1_0.tokens_revoked_at,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.discord_refresh_token is not null
2025-08-14 02:51:49.569 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.user_id,
        u1_0.account_non_expired,
        u1_0.account_non_locked,
        u1_0.battlenet_access_token,
        u1_0.battlenet_id,
        u1_0.battlenet_token_expiry,
        u1_0.created_at,
        u1_0.credentials_non_expired,
        u1_0.discord_access_token,
        u1_0.discord_id,
        u1_0.discord_refresh_token,
        u1_0.discord_token_expiry,
        u1_0.email,
        u1_0.enabled,
        u1_0.password,
        u1_0.state_phase,
        u1_0.tokens_revoked_at,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.discord_refresh_token is not null
2025-08-14 02:56:49.572 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.user_id,
        u1_0.account_non_expired,
        u1_0.account_non_locked,
        u1_0.battlenet_access_token,
        u1_0.battlenet_id,
        u1_0.battlenet_token_expiry,
        u1_0.created_at,
        u1_0.credentials_non_expired,
        u1_0.discord_access_token,
        u1_0.discord_id,
        u1_0.discord_refresh_token,
        u1_0.discord_token_expiry,
        u1_0.email,
        u1_0.enabled,
        u1_0.password,
        u1_0.state_phase,
        u1_0.tokens_revoked_at,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.discord_refresh_token is not null
2025-08-14 03:01:49.575 [scheduling-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.user_id,
        u1_0.account_non_expired,
        u1_0.account_non_locked,
        u1_0.battlenet_access_token,
        u1_0.battlenet_id,
        u1_0.battlenet_token_expiry,
        u1_0.created_at,
        u1_0.credentials_non_expired,
        u1_0.discord_access_token,
        u1_0.discord_id,
        u1_0.discord_refresh_token,
        u1_0.discord_token_expiry,
        u1_0.email,
        u1_0.enabled,
        u1_0.password,
        u1_0.state_phase,
        u1_0.tokens_revoked_at,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.discord_refresh_token is not null
